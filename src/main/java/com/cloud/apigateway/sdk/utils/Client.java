// Source code is unavailable, and was generated by the Fernflower decompiler.
package com.cloud.apigateway.sdk.utils;

import com.cloud.sdk.http.HttpMethodName;

import java.util.*;

import org.apache.http.client.methods.HttpRequestBase;

public class Client {
    public static  Map<Integer,Integer> httpMethodNames = new HashMap<Integer,Integer>(){{
                put(HttpMethodName.GET.ordinal(),1);
        put(HttpMethodName.POST.ordinal(),2);
        put(HttpMethodName.PUT.ordinal(),3);
        put(HttpMethodName.PATCH.ordinal(),4);
        put(HttpMethodName.DELETE.ordinal(),5);
        put(HttpMethodName.HEAD.ordinal(),6);
        put(HttpMethodName.OPTIONS.ordinal(),7);

    }};
    public static HttpRequestBase sign(Request request, String messageDigestAlgorithm) throws Exception {
        String appKey = request.getKey();
        String appSecrect = request.getSecrect();
        AccessService accessService = new AccessServiceImpl(appKey, appSecrect, messageDigestAlgorithm);
        String url = request.getUrl();
        String body = request.getBody();
        if (body == null) {
            body = "";
        }

        Map<String, String> headers = request.getHeaders();
        System.out.printf("::::"+request.getMethod().ordinal());
        System.out.println("::::"+HttpMethodName.GET.ordinal());
        switch(httpMethodNames.get(request.getMethod().ordinal())){
            case 1:
                return accessService.access(url, headers, "", HttpMethodName.GET);
            case 2:
                return accessService.access(url, headers, body, HttpMethodName.POST);
            case 3:
                return accessService.access(url, headers, body, HttpMethodName.PUT);
            case 4:
                return accessService.access(url, headers, body, HttpMethodName.PATCH);
            case 5:
                return accessService.access(url, headers, "", HttpMethodName.DELETE);
            case 6:
                return accessService.access(url, headers, "", HttpMethodName.HEAD);
            case 7:
                return accessService.access(url, headers, "", HttpMethodName.OPTIONS);
            default:
                throw new IllegalArgumentException(String.format("unsupported method:%s", request.getMethod().name()));
        }
    }

    public static synchronized HttpRequestBase sign(Request request) throws Exception {
        return sign(request, "SDK-HMAC-SHA256");
    }

//    public static okhttp3.Request signOkhttp(Request request, String messageDigestAlgorithm) throws Exception {
//        com.cloud.apigateway.sdk.utils.Client.ParamsEntity pe = new com.cloud.apigateway.sdk.utils.Client.ParamsEntity(request.getKey(), request.getSecrect(), request.getUrl(), request.getBody(), messageDigestAlgorithm);
//        return okhttpRequest(request.getMethod(), request.getHeaders(), pe);
//    }
//
//    public static okhttp3.Request signOkhttp(Request request) throws Exception {
//        return okhttpRequest(request.getMethod(), request.getKey(), request.getSecrect(), request.getUrl(), request.getHeaders(), request.getBody());
//    }

    public static HttpRequestBase put(String ak, String sk, String requestUrl, Map<String, String> headers, String putBody) throws Exception {
        if (putBody == null) {
            putBody = "";
        }

        AccessService accessService = new AccessServiceImpl(ak, sk);
        return accessService.access(requestUrl, headers, putBody, HttpMethodName.PUT);
    }

    public static HttpRequestBase patch(String ak, String sk, String requestUrl, Map<String, String> headers, String body) throws Exception {
        if (body == null) {
            body = "";
        }

        AccessService accessService = new AccessServiceImpl(ak, sk);
        return accessService.access(requestUrl, headers, body, HttpMethodName.PATCH);
    }

    public static HttpRequestBase delete(String ak, String sk, String requestUrl, Map<String, String> headers) throws Exception {
        AccessService accessService = new AccessServiceImpl(ak, sk);
        return accessService.access(requestUrl, headers, HttpMethodName.DELETE);
    }

    public static HttpRequestBase get(String ak, String sk, String requestUrl, Map<String, String> headers) throws Exception {
        AccessService accessService = new AccessServiceImpl(ak, sk);
        return accessService.access(requestUrl, headers, HttpMethodName.GET);
    }

    public static HttpRequestBase post(String ak, String sk, String requestUrl, Map<String, String> headers, String postbody) throws Exception {
        if (postbody == null) {
            postbody = "";
        }

        AccessService accessService = new AccessServiceImpl(ak, sk);
        return accessService.access(requestUrl, headers, postbody, HttpMethodName.POST);
    }

    public static HttpRequestBase head(String ak, String sk, String requestUrl, Map<String, String> headers) throws Exception {
        AccessService accessService = new AccessServiceImpl(ak, sk);
        return accessService.access(requestUrl, headers, HttpMethodName.HEAD);
    }

    public static HttpRequestBase options(String ak, String sk, String requestUrl, Map<String, String> headers) throws Exception {
        AccessService accessService = new AccessServiceImpl(ak, sk);
        return accessService.access(requestUrl, headers, HttpMethodName.OPTIONS);
    }

//    private static okhttp3.Request okhttpRequest(HttpMethodName httpMethod, Map<String, String> headers, com.cloud.apigateway.sdk.utils.Client.ParamsEntity pe) throws Exception {
//        switch(1.$SwitchMap$com$cloud$sdk$http$HttpMethodName[httpMethod.ordinal()]) {
//            case 1:
//            case 6:
//            case 7:
//                pe.body = "";
//            case 2:
//            case 3:
//            case 4:
//            case 5:
//                if (pe.body == null) {
//                    pe.body = "";
//                }
//
//                AccessServiceOkhttp accessServiceOkhttp = new AccessServiceOkhttpImpl(pe.appKey, pe.secretKeyk, pe.algorithm);
//                return accessServiceOkhttp.access(pe.requestUrl, headers, pe.body, httpMethod);
//            default:
//                throw new UnknownHttpMethodException("Unknown HTTP method name: " + httpMethod);
//        }
//    }

//    public static okhttp3.Request okhttpRequest(HttpMethodName httpMethod, String ak, String sk, String requestUrl, Map<String, String> headers, String body) throws Exception {
//        com.cloud.apigateway.sdk.utils.Client.ParamsEntity pe = new com.cloud.apigateway.sdk.utils.Client.ParamsEntity(ak, sk, requestUrl, body, "SDK-HMAC-SHA256");
//        return okhttpRequest(httpMethod, headers, pe);
//    }
}



